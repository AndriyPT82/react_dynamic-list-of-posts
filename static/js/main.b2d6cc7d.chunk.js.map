{"version":3,"sources":["api/api.js","api/posts.js","components/Loader/Loader.jsx","components/Carousel/Carousel.jsx","components/PostCard/PostCard.jsx","components/PostsList/PostsList.jsx","components/Paginator/Paginator.jsx","api/comments.js","components/Comment/Comment.jsx","components/Comments/Comments.jsx","components/NewCommentForm/NewCommentForm.jsx","components/Popup/Popup.jsx","App.jsx","index.js"],"names":["BASE_URL","request","url","fetch","then","response","json","posts","console","log","map","post","index","image","postsImages","Loader","className","classes","Carousel","users","callBack","useState","classesList","setClasses","currentUser","setCurrentUser","useEffect","Object","keys","length","type","onClick","slice","user","key","id","role","aria-hidden","classNames","choise","includes","prevClasses","handleClick","src","alt","name","PostCard","onClickReadMore","title","value","postAuthor","find","userId","PostsList","React","memo","Fragment","propTypes","PropTypes","arrayOf","shape","number","isRequired","object","func","Paginator","total","perPage","currentPage","handleChange","pagesCount","Math","ceil","disabled","event","target","currentBtn","Array","prevBtn","nextBtn","handleControlers","page","uuidv4","method","getPostComments","postId","a","Comment","body","email","createdAt","onSubmit","Comments","comments","comment","NewCommentForm","errors","state","setState","trim","currentState","handleErrors","TextField","variant","label","style","width","multiline","rows","rowsmax","error","helperText","onChange","onBlur","test","isEmail","values","some","Popup","commentsLength","isOpen","address","city","street","suite","zipcode","authorImage","phone","postImage","setComents","idCommentRemove","setIdCommentRemove","newComment","setNewComment","commentsVisibility","setCommentsVisibility","res","headers","JSON","stringify","addNewComment","App","isActive","postsForDisplay","setPostsForDisplay","postDetails","setPostDetails","handleSetState","prevState","Number","isInteger","usersList","usersFromApi","usersImage","obj","postsList","filter","startIndex","stopIndex","images","styling","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2d6cc7d.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\nimport postsImages from './posts_images.json';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(posts => {\n    console.log(posts)\n\n    return posts.map((post, index) => ({\n    ...post, image: postsImages[index].image,\n  }))});\n\nexport const getPosts = () => request('/posts');\nexport const getPostDetails = postId => request(`/posts/${postId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Carousel.scss';\n\nconst classes = [\n  'left-small',\n  'left-middle',\n  'front',\n  'right-middle',\n  'right-small',\n  'final-hidden',\n  'hidden',\n  'hidden',\n  'hidden',\n  'initial-hidden',\n];\n\nconst handleClick = (choise, setClasses) => {\n  if (['left-small', 'left-middle'].includes(choise)) {\n    if (choise === 'left-middle') {\n      setClasses(prevClasses => (\n        [...prevClasses.slice(1), prevClasses[0]]\n      ));\n    } else {\n      setClasses(prevClasses => (\n        [...prevClasses.slice(1), prevClasses[0]]\n      ));\n      setClasses(prevClasses => (\n        [...prevClasses.slice(1), prevClasses[0]]\n      ));\n    }\n\n    return;\n  }\n\n  if (choise === 'right-middle') {\n    setClasses(prevClasses => (\n      [...prevClasses.slice(-1), ...prevClasses.slice(0, -1)]\n    ));\n  } else {\n    setClasses(prevClasses => (\n      [...prevClasses.slice(-1), ...prevClasses.slice(0, -1)]\n    ));\n    setClasses(prevClasses => (\n      [...prevClasses.slice(-1), ...prevClasses.slice(0, -1)]\n    ));\n  }\n};\n\nexport const Carousel = ({ users, callBack }) => {\n  const [classesList, setClasses] = useState(classes);\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    if (Object.keys(currentUser).length) {\n      callBack('currentUser', currentUser);\n    }\n  }, [currentUser]);\n\n  return (\n    <div className=\"carousel\">\n      <button\n        type=\"button\"\n        className=\"btn btn__prev\"\n        onClick={() => {\n          setClasses([...classesList.slice(-1), ...classesList.slice(0, -1)]);\n        }}\n      >\n        &#8249;\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"btn btn__next\"\n        onClick={() => {\n          setClasses([...classesList.slice(1), classesList[0]]);\n        }}\n      >\n        &#8250;\n      </button>\n\n      <ul>\n        {users.map((user, index) => (\n          <div\n            key={user.id}\n            className={`wrapper wrapper--${classesList[index]}`}\n          >\n            <li\n              role=\"menuitem\"\n              aria-hidden\n              className={classNames(\n                'carousel__card',\n                `carousel__card--${classesList[index]} `,\n                { 'carousel__card--active': currentUser.id === user.id },\n                'author',\n              )}\n              onClick={() => {\n                if (classesList[index] !== 'front') {\n                  handleClick(classesList[index], setClasses);\n                }\n\n                setCurrentUser(user);\n              }}\n            >\n              <img\n                className=\"author__image\"\n                src={user.image}\n                alt=\"author-avatar\"\n              />\n              <span className=\"author__name\">\n                {user.name}\n              </span>\n            </li>\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nCarousel.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  callBack: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostCard.scss';\n\nexport const PostCard = ({ users, post, onClickReadMore }) => (\n\n  <li className=\"post\">\n    <div className=\"post__image-container\">\n      <img className=\"post__image\" src={post.image} alt=\"\" />\n    </div>\n    <div className=\"post__info\">\n      <div className=\"post__title\">\n        {' '}\n        {post.title}\n      </div>\n      <button\n        type=\"button\"\n        className=\"button button--details\"\n        value={post.id}\n        onClick={() => {\n          const postAuthor = users.find(user => user.id === post.userId);\n\n          onClickReadMore({\n            post, postAuthor,\n          });\n        }}\n      >\n        READ MORE\n      </button>\n    </div>\n  </li>\n);\n\nPostCard.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    image: PropTypes.string.isRequired,\n    userId: PropTypes.number.isRequired,\n  }).isRequired,\n  onClickReadMore: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\nimport { PostCard } from '../PostCard';\n\nexport const PostsList = React.memo(({ posts, users, onClickReadMore }) => (\n  <ul className=\"posts\">\n    {\n        posts.map(post => (\n          <React.Fragment key={post.id}>\n            <PostCard\n              users={users}\n              onClickReadMore={onClickReadMore}\n              post={post}\n            />\n          </React.Fragment>\n        ))\n      }\n  </ul>\n));\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  users: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  onClickReadMore: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './Paginator.scss';\n\nconst handleControlers = (pagesCount, currentBtn) => {\n  if (pagesCount <= 4) {\n    return [...Array(pagesCount).keys()].map(number => number + 1);\n  }\n\n  const prevBtn = currentBtn - 1;\n  const nextBtn = currentBtn + 1;\n\n  if ([1, pagesCount].includes(currentBtn)) {\n    return currentBtn === 1\n      ? [1, 2, '...', pagesCount]\n      : [1, '...', pagesCount - 1, pagesCount];\n  }\n\n  if (currentBtn === 2 || nextBtn === pagesCount) {\n    return currentBtn === 2\n      ? [1, currentBtn, nextBtn, '...', pagesCount]\n      : [1, '...', prevBtn, currentBtn, pagesCount];\n  }\n\n  if (currentBtn - 3 === 0 || currentBtn + 2 === pagesCount) {\n    return currentBtn - 3 === 0\n      ? [1, 2, currentBtn, nextBtn, '...', pagesCount]\n      : [1, '...', prevBtn, currentBtn, pagesCount - 1, pagesCount];\n  }\n\n  return [1, '...', prevBtn, currentBtn, nextBtn, '...', pagesCount];\n};\n\nexport const Paginator = ({ total, perPage, currentPage, handleChange }) => {\n  const pagesCount = Math.ceil(total / perPage);\n\n  return (\n    <ul className=\"buttonsContainer\">\n      <button\n        type=\"button\"\n        name=\"currentPage\"\n        className={classNames(\n          'button',\n          'button__paginator',\n          'button__paginator--prev',\n          { 'button--is-active': currentPage === 1 },\n        )}\n        value={currentPage - 1}\n        disabled={currentPage === 1}\n        onClick={(event) => {\n          const { name, value } = event.target;\n\n          handleChange(name, +value);\n        }}\n      >\n        PREV\n      </button>\n      {\n        handleControlers(pagesCount, currentPage).map(page => (\n\n          <li\n            key={uuidv4()}\n          >\n            <button\n              type=\"button\"\n              name=\"currentPage\"\n              className={classNames(\n                'button',\n                'button__paginator',\n                {\n                  'button--is-active': page === currentPage,\n                },\n              )\n              }\n              value={page}\n              disabled={page === currentPage || page === '...'}\n              onClick={(event) => {\n                const { name, value } = event.target;\n\n                handleChange(name, +value);\n              }}\n            >\n              {page}\n            </button>\n          </li>\n        ))\n      }\n      <button\n        type=\"button\"\n        name=\"currentPage\"\n        className={classNames(\n          'button',\n          'button__paginator',\n          'button__paginator--next',\n          { 'button--is-active': currentPage === pagesCount },\n        )}\n        value={currentPage + 1}\n        disabled={currentPage === pagesCount}\n        onClick={(event) => {\n          const { name, value } = event.target;\n\n          handleChange(name, +value);\n        }}\n\n      >\n        NEXT\n      </button>\n    </ul>\n  );\n};\n\nPaginator.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nconst request = (url, method) => fetch(`${BASE_URL}${url}`, method);\n\nexport const getPostComments = async(postId) => {\n  const response = await request(`/comments?postId=${postId}`);\n  const json = await response.json();\n\n  return json;\n};\n\nexport const removeComment = id => (\n  request(`/comments/${id}`, { method: 'DELETE' })\n);\n\nexport const addNewComment = newComment => request('/comments', {\n  method: 'POST',\n  headers: {\n    'Content-type': 'aplication/json; charset=utf-8',\n  },\n  body: JSON.stringify(newComment),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Comment.scss';\n\nexport const Comment = ({ body, email, createdAt, name, id, onSubmit }) => (\n  < >\n    <div className=\"comment__logo-block\">\n      <img\n        // eslint-disable-next-line\n        src=\"https://as1.ftcdn.net/v2/jpg/04/12/57/22/1000_F_412572270_OGw5hFLVwWoBCOdwWjLa1qGHsYU444PI.jpg\"\n        alt=\"\"\n      />\n      <span>{name}</span>\n    </div>\n    <div className=\"comment__body\">\n      <p>{body}</p>\n    </div>\n    <div className=\"comment__info\">\n      <span>{email}</span>\n      {'    '}\n      <span>{createdAt}</span>\n    </div>\n\n    <button\n      type=\"button\"\n      className=\"button button__delete\"\n      onClick={() => onSubmit(id)}\n    >\n      Delete\n    </button>\n  </>\n);\n\nComment.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  createdAt: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Comment } from '../Comment';\nimport './Comments.scss';\n\nexport const Comments = ({ comments, onSubmit }) => (\n  <div className=\"comments\">\n\n    <ul className=\"comments__list\">\n      {\n        comments.map(comment => (\n          <li className=\"comment\" key={comment.id}>\n            <Comment\n              {...comment}\n              onSubmit={onSubmit}\n            />\n          </li>\n        ))\n      }\n    </ul>\n\n  </div>\n);\n\nComments.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@material-ui/core';\nimport './NewCommentForm.scss';\n\nconst isEmail = (email) => {\n  /* eslint-disable no-useless-escape */\n  /* eslint-disable max-len */\n  const regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return regEmail.test(email);\n};\n\nexport const NewCommentForm = ({ postId, onSubmit }) => {\n  const [state, setState] = useState({\n    body: '',\n    name: '',\n    email: '',\n    errors: {\n      body: false,\n      name: false,\n      email: false,\n    },\n  });\n\n  const handleSubmit = () => {\n    onSubmit({\n      postId, body, name, email,\n    });\n\n    setState({\n      body: '',\n      name: '',\n      email: '',\n      errors: {\n        body: false,\n        name: false,\n        email: false,\n      },\n    });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (!state[name] && !value.trim()) {\n      return;\n    }\n\n    state.errors[name] = false;\n    setState(currentState => ({\n      ...currentState, [name]: value,\n    }));\n  };\n\n  const handleErrors = (event) => {\n    const { name } = event.target;\n\n    state.errors[name] = true;\n    setState({ ...state });\n  };\n\n  const { body, name, email, errors } = state;\n\n  return (\n    <div className=\"feedback__inputs\">\n      <div className=\"feedback__text-fields\">\n        <TextField\n          variant=\"outlined\"\n          label=\"Comment:\"\n          style={{ width: 350 }}\n          multiline\n          rows={5}\n          rowsmax={8}\n          name=\"body\"\n          error={!!errors.body}\n          helperText={!!errors.body && 'Comment should be more then 10 words'}\n          value={body}\n          onChange={handleChange}\n          onBlur={event => body.length < 5 && handleErrors(event)}\n        />\n\n        <div className=\"text-fields__wrapper\">\n          <TextField\n            variant=\"outlined\"\n            label=\"Name:\"\n            name=\"name\"\n            value={name}\n            error={!!errors.name}\n            helperText={!!errors.name && 'Name shold be more then 3 letters'}\n            style={{ width: 250 }}\n            onChange={handleChange}\n            onBlur={event => name.length < 3 && handleErrors(event)}\n\n          />\n          <TextField\n            type=\"email\"\n            variant=\"outlined\"\n            label=\"Email:\"\n            name=\"email\"\n            error={!!errors.email}\n            helperText={!!errors.email && 'email is not valid'}\n            value={email}\n            style={{ width: 250 }}\n            onChange={handleChange}\n            onBlur={event => !isEmail(email) && handleErrors(event)}\n\n          />\n        </div>\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"button button__comments\"\n        disabled={\n          Object.values(errors).some(value => value)\n          || Object.values(state).some(value => !value)\n        }\n        onClick={handleSubmit}\n      >\n        Post\n      </button>\n    </div>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  getPostComments,\n  removeComment,\n  addNewComment,\n} from '../../api/comments';\n\nimport { Comments } from '../Comments';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './Popup.scss';\n\nconst setButtonTitle = (commentsLength, isOpen) => {\n  if (!commentsLength) {\n    return 'No Comments';\n  }\n\n  return isOpen ? 'Hide Comments' : 'Show Comments';\n};\n\nexport const Popup = ({\n  post,\n  postAuthor,\n  onSubmit,\n}) => {\n  const {\n    name,\n    address: { city, street, suite, zipcode },\n    image: authorImage,\n    phone,\n    email,\n  } = postAuthor;\n\n  const {\n    id: postId,\n    title,\n    image: postImage,\n    body,\n  } = post;\n\n  const [comments, setComents] = useState([]);\n  const [idCommentRemove, setIdCommentRemove] = useState(null);\n  const [newComment, setNewComment] = useState(null);\n  const [commentsVisibility, setCommentsVisibility] = useState(false);\n\n  useEffect(() => {\n    if (!idCommentRemove) {\n      getPostComments(postId)\n        .then(res => setComents(res));\n\n      return;\n    }\n\n    removeComment(idCommentRemove)\n      .then(() => {\n        getPostComments(postId);\n        setIdCommentRemove(null);\n      });\n\n\n  }, [idCommentRemove]);\n\n\n\n\n\n\n  useEffect(() => {\n    if (!newComment) {\n      return;\n    }\n\n    addNewComment(newComment)\n      .then(() => getPostComments(postId))\n      .then((response) => {\n        setComents(response);\n        setNewComment(null);\n      });\n  }, [newComment]);\n\n  return (\n    <>\n      <div className=\"popup__content\">\n        <button\n          className=\"button button__close\"\n          type=\"button\"\n          onClick={() => onSubmit({})}\n        >\n          X\n        </button>\n        <div className=\"popup__header\">\n          <img src={postImage} alt=\"post-logo\" />\n        </div>\n\n        <div className=\"popup__info-block person\">\n\n          <img\n            src={authorImage}\n            alt=\"person-avatar\"\n            className=\"person__image\"\n          />\n\n          <div className=\"person__about\">\n            <span className=\"person__name\">\n              {name}\n            </span>\n            <span>\n              {`${street} ${suite}`}\n              <br />\n              {`${city} ${zipcode}`}\n            </span>\n            <span>\n              {phone}\n            </span>\n            <span>\n              {email}\n            </span>\n\n          </div>\n        </div>\n\n        <div className=\"person__post\">\n          <span className=\"person__post__title\">\n            {title}\n          </span>\n          <div className=\"person__post__text\">\n            &ldquo;\n            {' '}\n            {body}\n            {' '}\n            &bdquo;\n          </div>\n\n          {(!!comments.length && commentsVisibility)\n            && (\n              <Comments\n                comments={comments}\n                onSubmit={setIdCommentRemove}\n              />\n            )\n          }\n\n          <div className=\"feedback\">\n            <NewCommentForm\n              postId={postId}\n              onSubmit={setNewComment}\n            />\n\n            <button\n              type=\"button\"\n              className=\"button button__toggle\"\n              disabled={!comments.length}\n              onClick={() => {\n                setCommentsVisibility(!commentsVisibility);\n              }}\n            >\n              {\n                setButtonTitle(comments.length, commentsVisibility)\n              }\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nPopup.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n  }).isRequired,\n  postAuthor: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    address: PropTypes.shape({\n      city: PropTypes.string.isRequired,\n      street: PropTypes.string.isRequired,\n      suite: PropTypes.string.isRequired,\n      zipcode: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { getPosts } from './api/posts';\nimport postsImages from './posts_images.json';\nimport usersImage from './usersImages.json';\nimport usersFromApi from './api/users.json';\nimport './App.scss';\nimport { Loader } from './components/Loader';\nimport { Carousel } from './components/Carousel';\nimport { PostsList } from './components/PostsList';\nimport { Paginator } from './components/Paginator';\nimport { Popup } from './components/Popup';\n\nconst App = () => {\n  const [state, setState] = useState({\n    users: [],\n    posts: [],\n    total: 0,\n    perPage: 6,\n    currentPage: 1,\n    currentUser: null,\n    isActive: true,\n  });\n\n  const [postsForDisplay, setPostsForDisplay] = useState([]);\n  const [postDetails, setPostDetails] = useState({});\n\n  const { users, posts, currentPage, perPage, currentUser, isActive } = state;\n\n  const handleSetState = (name, value) => {\n    if (name === 'currentUser') {\n      setState(prevState => ({\n        ...prevState, currentPage: 1, isActive: false,\n      }));\n    }\n\n    if (name === 'isActive') {\n      setState(prevState => ({\n        ...prevState,\n        currentPage: 1,\n      }));\n    }\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: Number.isInteger(value) ? +value : value,\n    }));\n  };\n\n  useEffect(() => {\n    const usersList = usersFromApi.map((user) => {\n      const image = usersImage.find(obj => obj[user.id])[user.id];\n\n      return {\n        ...user, image,\n      };\n    });\n\n    setState(prevState => ({\n      ...prevState, users: usersList,\n    }));\n\n    getPosts()\n      .then(postsList => setState(prevState => ({\n        ...prevState, posts: postsList, total: posts.length,\n      })));\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      setPostsForDisplay(posts);\n\n      return;\n    }\n\n    setPostsForDisplay(posts.filter(post => post.userId === currentUser.id));\n  }, [posts, isActive, currentUser]);\n\n  const startIndex = currentPage * perPage - perPage;\n  const stopIndex = currentPage * perPage;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\" />\n\n      <main className=\"App__main\">\n        <Carousel\n          users={users}\n          callBack={handleSetState}\n        />\n        <>\n          <div className=\"posts-container\">\n            <div className=\"buttons-container\">\n              <button\n                type=\"button\"\n                className={classNames(\n                  'button-posts',\n                  { 'button-posts__active': isActive },\n                )}\n                disabled={isActive}\n                onClick={() => {\n                  handleSetState('isActive', true);\n                }}\n              >\n                ALL POSTS\n              </button>\n              {\n                currentUser\n                && (\n                  <button\n                    type=\"button\"\n                    className={classNames(\n                      'button-posts',\n                      'button-posts__user',\n                      { 'button-posts__active': !isActive },\n                    )}\n                    disabled={!isActive}\n                    onClick={() => {\n                      handleSetState('isActive', false);\n                    }}\n                  >\n                    {`Posts of: ${currentUser.name}`}\n                  </button>\n                )\n              }\n            </div>\n            {\n              !postsForDisplay.length\n                ? <Loader />\n                : (\n                  <PostsList\n                    images={postsImages}\n                    users={users}\n                    posts={postsForDisplay.slice(startIndex, stopIndex)}\n                    onClickReadMore={setPostDetails}\n                  />\n                )\n            }\n\n          </div>\n          {\n            !!Object.keys(postDetails).length\n            && (\n              <div\n                role=\"link\"\n                styling=\"link\"\n                aria-hidden\n                className=\"popup\"\n                onClick={(event) => {\n                  if (event.target === event.currentTarget) {\n                    setPostDetails({});\n                  }\n                }}\n              >\n                <Popup\n                  {...postDetails}\n                  onSubmit={setPostDetails}\n                />\n              </div>\n            )\n          }\n          {\n            !!postsForDisplay.length\n            && (\n              <Paginator\n                total={postsForDisplay.length}\n                perPage={6}\n                currentPage={currentPage}\n                handleChange={handleSetState}\n              />\n            )\n          }\n        </>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}