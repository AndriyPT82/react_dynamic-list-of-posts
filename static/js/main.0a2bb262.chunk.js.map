{"version":3,"sources":["api/api.js","api/posts.js","components/Carousel/Carousel.jsx","components/PostCard/PostCard.jsx","components/PostsList/PostsList.jsx","components/Paginator/Paginator.jsx","api/comments.js","components/Comment/Comment.jsx","components/Comments/Comments.jsx","components/NewCommentForm/NewCommentForm.jsx","components/Popup/Popup.jsx","App.jsx","index.js"],"names":["BASE_URL","request","url","fetch","then","response","json","posts","data","map","post","index","image","postsImages","classes","Carousel","users","callBack","useState","classesList","setClasses","currentUser","setCurrentUser","useEffect","Object","keys","length","className","type","onClick","slice","user","key","id","role","aria-hidden","classNames","card__active","choise","includes","prevClasses","handleClick","src","alt","name","PostCard","title","value","postAuthor","find","userId","PostsList","React","memo","Fragment","propTypes","PropTypes","arrayOf","shape","number","isRequired","object","func","Paginator","total","perPage","currentPage","handleChange","pagesCount","Math","ceil","disabled","event","target","currentBtn","Array","prevBtn","nextBtn","handleControlers","page","uuidv4","method","getPostComments","postId","Comment","body","email","createdAt","Comments","comments","comment","NewCommentForm","error","state","setState","handleSetState","trim","TextField","variant","label","style","width","multiline","rows","rowsmax","onChange","color","helperText","test","isEmail","prevState","Popup","commentsLength","isOpen","address","city","street","suite","zipcode","authorImage","phone","postImage","setComents","idCommentRemove","setIdCommentRemove","newComment","setNewComment","commentsVisibility","setCommentsVisibility","headers","JSON","stringify","addNewComment","App","isActive","postsForDisplay","setPostsForDisplay","postDetails","setPostDetails","Number","isInteger","usersList","usersFromApi","usersImage","obj","postsList","filter","startIndex","stopIndex","images","styling","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a2bb262.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\nimport postsImages from './posts_images.json';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(posts => posts.data.map((post, index) => ({\n    ...post, image: postsImages[index].image,\n  })));\n\nexport const getPosts = () => request('/posts');\nexport const getPostDetails = postId => request(`/posts/${postId}`);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Carousel.scss';\n\nconst classes = [\n  'first',\n  'second',\n  'third',\n  'fourth',\n  'fifth',\n  'end',\n  'hidden',\n  'hidden',\n  'hidden',\n  'start',\n];\n\nconst handleClick = (choise, setClasses) => {\n  if (['first', 'second'].includes(choise)) {\n    if (choise === 'second') {\n      setClasses(prevClasses => (\n        [...prevClasses.slice(1), prevClasses[0]]\n      ));\n    } else {\n      setClasses(prevClasses => (\n        [...prevClasses.slice(1), prevClasses[0]]\n      ));\n      setClasses(prevClasses => (\n        [...prevClasses.slice(1), prevClasses[0]]\n      ));\n    }\n\n    return;\n  }\n\n  if (choise === 'fourth') {\n    setClasses(prevClasses => (\n      [...prevClasses.slice(-1), ...prevClasses.slice(0, -1)]\n    ));\n  } else {\n    setClasses(prevClasses => (\n      [...prevClasses.slice(-1), ...prevClasses.slice(0, -1)]\n    ));\n    setClasses(prevClasses => (\n      [...prevClasses.slice(-1), ...prevClasses.slice(0, -1)]\n    ));\n  }\n};\n\nexport const Carousel = ({ users, callBack }) => {\n  const [classesList, setClasses] = useState(classes);\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    if (Object.keys(currentUser).length) {\n      callBack('currentUser', currentUser);\n    }\n  }, [currentUser]);\n\n  return (\n    <div className=\"box\">\n      <button\n        type=\"button\"\n        className=\"btn btn__prev\"\n        onClick={() => {\n          setClasses([...classesList.slice(-1), ...classesList.slice(0, -1)]);\n        }}\n      />\n\n      <button\n        type=\"button\"\n        className=\"btn btn__next\"\n        onClick={() => {\n          setClasses([...classesList.slice(1), classesList[0]]);\n        }}\n      />\n\n      <ul>\n        {users.map((user, index) => (\n          <div\n            key={user.id}\n            className={`wrapper wrapper__${classesList[index]}`}\n          >\n            <li\n              role=\"menuitem\"\n              aria-hidden\n              className={classNames(\n                `card card__${classesList[index]}`,\n                { card__active: currentUser.id === user.id },\n              )}\n              onClick={() => {\n                if (classesList[index] !== 'third') {\n                  handleClick(classesList[index], setClasses);\n                }\n\n                setCurrentUser(user);\n              }}\n            >\n              <img className=\"author-image\" src={user.image} alt=\"author\" />\n              <span className=\"name\">\n                {user.name}\n              </span>\n            </li>\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nCarousel.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  callBack: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostCard.scss';\n\nexport const PostCard = ({ users, post, callBack }) => (\n\n  <li className=\"post\">\n    <div className=\"post__image-container\">\n      <img className=\"post__image\" src={post.image} alt=\"\" />\n\n    </div>\n    <div className=\"post__info\">\n      <div className=\"post__title\">\n        {' '}\n        {post.title}\n      </div>\n      <button\n        type=\"button\"\n        className=\"button button--details\"\n        value={post.id}\n        onClick={() => {\n          const postAuthor = users.find(user => user.id === post.userId);\n\n          callBack({\n            post, postAuthor,\n          });\n        }}\n      >\n        READ MORE\n      </button>\n    </div>\n  </li>\n);\n\nPostCard.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    image: PropTypes.string.isRequired,\n    userId: PropTypes.number.isRequired,\n  }).isRequired,\n  callBack: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\n\nimport { PostCard } from '../PostCard';\n\nexport const PostsList = React.memo(({ posts, users, callBack }) => (\n  <ul className=\"posts\">\n    {\n        posts.map(post => (\n          <React.Fragment key={post.id}>\n            <PostCard\n              users={users}\n              callBack={callBack}\n              post={post}\n            />\n          </React.Fragment>\n        ))\n      }\n  </ul>\n));\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  users: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  callBack: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './Paginator.scss';\n\nconst handleControlers = (pagesCount, currentBtn) => {\n  if (pagesCount <= 4) {\n    return [...Array(pagesCount).keys()].map(number => number + 1);\n  }\n\n  const prevBtn = currentBtn - 1;\n  const nextBtn = currentBtn + 1;\n\n  if ([1, pagesCount].includes(currentBtn)) {\n    return currentBtn === 1\n      ? [1, 2, '...', pagesCount]\n      : [1, '...', pagesCount - 1, pagesCount];\n  }\n\n  if (currentBtn === 2 || nextBtn === pagesCount) {\n    return currentBtn === 2\n      ? [1, currentBtn, nextBtn, '...', pagesCount]\n      : [1, '...', prevBtn, currentBtn, pagesCount];\n  }\n\n  if (currentBtn - 3 === 0 || currentBtn + 2 === pagesCount) {\n    return currentBtn - 3 === 0\n      ? [1, 2, currentBtn, nextBtn, '...', pagesCount]\n      : [1, '...', prevBtn, currentBtn, pagesCount - 1, pagesCount];\n  }\n\n  return [1, '...', prevBtn, currentBtn, nextBtn, '...', pagesCount];\n};\n\nexport const Paginator = ({ total, perPage, currentPage, handleChange }) => {\n  const pagesCount = Math.ceil(total / perPage);\n\n  return (\n    <ul className=\"buttonsContainer\">\n      <button\n        type=\"button\"\n        name=\"currentPage\"\n        className=\"button button__paginator button__paginator--prev\"\n        value={currentPage - 1}\n        disabled={currentPage === 1}\n        onClick={(event) => {\n          const { name, value } = event.target;\n\n          handleChange(name, +value);\n        }}\n      >\n        PREV\n      </button>\n      {\n        handleControlers(pagesCount, currentPage).map(page => (\n\n          <li\n            key={uuidv4()}\n          >\n            <button\n              type=\"button\"\n              name=\"currentPage\"\n              className={classNames(\n                'button',\n                'button__paginator',\n                {\n                  'button--is-active': page === currentPage,\n                },\n              )\n              }\n              value={page}\n              disabled={page === currentPage || page === '...'}\n              onClick={(event) => {\n                const { name, value } = event.target;\n\n                handleChange(name, +value);\n              }}\n            >\n              {page}\n            </button>\n          </li>\n        ))\n      }\n      <button\n        type=\"button\"\n        name=\"currentPage\"\n        className=\"button button__paginator button__paginator--next\"\n        value={currentPage + 1}\n        disabled={currentPage === pagesCount}\n        onClick={(event) => {\n          const { name, value } = event.target;\n\n          handleChange(name, +value);\n        }}\n\n      >\n        NEXT\n      </button>\n    </ul>\n  );\n};\n\nPaginator.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nconst request = (url, method) => fetch(`${BASE_URL}${url}`, method)\n  .then(response => response.json())\n  .then(json => json.data);\n\nexport const getPostComments = postId => request(`/comments?postId=${postId}`);\n\nexport const removeComment = (id) => {\n  request(`/comments/${id}`, { method: 'DELETE' });\n};\n\nexport const addNewComment = (newComment) => {\n  if (!newComment) {\n    return;\n  }\n\n  request('/comments/', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'aplication/json; charset=utf-8',\n    },\n    body: JSON.stringify(newComment),\n  });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Comment.scss';\n\nexport const Comment = ({ body, email, createdAt, name, id, callBack }) => (\n  < >\n    <div className=\"comment__logo-block\">\n      <img\n        // eslint-disable-next-line\n        src=\"https://as1.ftcdn.net/v2/jpg/04/12/57/22/1000_F_412572270_OGw5hFLVwWoBCOdwWjLa1qGHsYU444PI.jpg\"\n        alt=\"\"\n      />\n      <span>{name}</span>\n    </div>\n    <div className=\"comment__body\">\n      <p>{body}</p>\n    </div>\n    <div className=\"comment__info\">\n      <span>{email}</span>\n      {'    '}\n      <span>{createdAt}</span>\n    </div>\n\n    <button\n      type=\"button\"\n      className=\"button button__delete\"\n      onClick={() => callBack(id)}\n    >\n      Delete\n    </button>\n  </>\n);\n\nComment.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  createdAt: PropTypes.string.isRequired,\n  callBack: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Comment } from '../Comment';\nimport './Comments.scss';\n\nexport const Comments = ({ comments, callBack }) => (\n  <div className=\"comments\">\n\n    <ul className=\"comments__list\">\n      {\n        comments.map(comment => (\n          <li className=\"comment\" key={comment.id}>\n            <Comment\n              {...comment}\n              callBack={callBack}\n            />\n          </li>\n        ))\n      }\n    </ul>\n\n  </div>\n);\n\nComments.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  callBack: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@material-ui/core';\nimport './NewCommentForm.scss';\n\nconst isEmail = (email) => {\n  /* eslint-disable no-useless-escape */\n  /* eslint-disable max-len */\n  const regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return regEmail.test(email);\n};\n\nexport const NewCommentForm = ({ postId, callBack }) => {\n  const [state, setState] = useState({\n    body: '',\n    name: '',\n    email: '',\n    error: false,\n  });\n\n  const handleSubmit = () => {\n    if (!isEmail(email)) {\n      setState(prevState => ({\n        ...prevState, error: true,\n      }));\n\n      return;\n    }\n\n    const result = {\n      postId, body, name, email,\n    };\n\n    callBack(result);\n    setState({\n      body: '',\n      name: '',\n      email: '',\n      error: false,\n    });\n  };\n\n  const handleSetState = (event) => {\n    const { name, value } = event.target;\n\n    if (!state[name] && !value.trim()) {\n      return;\n    }\n\n    setState({\n      ...state, error: false, [name]: value,\n    });\n  };\n\n  const { body, name, email, error } = state;\n\n  return (\n    <div className=\"feedback__inputs\">\n\n      <div className=\"feedback__text-fields\">\n        <TextField\n          variant=\"outlined\"\n          label=\"Comment:\"\n          style={{ width: 350 }}\n          multiline\n          rows={5}\n          rowsmax={8}\n          name=\"body\"\n          value={body}\n          onChange={handleSetState}\n        />\n\n        <div className=\"text-fields__wrapper\">\n          <TextField\n            variant=\"outlined\"\n            label=\"Name:\"\n            name=\"name\"\n            value={name}\n            style={{\n              width: 250, color: 'white',\n            }}\n            onChange={handleSetState}\n          />\n          <TextField\n            type=\"email\"\n            variant=\"outlined\"\n            label=\"Email:\"\n            name=\"email\"\n            error={error}\n            helperText={error && 'email is not valid'}\n            value={email}\n            style={{ width: 250 }}\n            onChange={handleSetState}\n          />\n        </div>\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"button button__comments\"\n        onClick={handleSubmit}\n      >\n        PUBLIC\n      </button>\n\n    </div>\n\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  callBack: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  getPostComments,\n  removeComment,\n  addNewComment,\n} from '../../api/comments';\n\nimport { Comments } from '../Comments';\n\nimport { NewCommentForm } from '../NewCommentForm';\n\nimport './Popup.scss';\n\nconst setButtonTitle = (commentsLength, isOpen) => {\n  if (!commentsLength) {\n    return 'No Comments';\n  }\n\n  return isOpen ? 'Hide Comments' : 'Show Comments';\n};\n\nexport const Popup = ({\n  post,\n  postAuthor,\n  callBack,\n}) => {\n  const {\n    name,\n    address: { city, street, suite, zipcode },\n    image: authorImage,\n    phone,\n    email,\n  } = postAuthor;\n\n  const {\n    id: postId,\n    title,\n    image: postImage,\n    body,\n  } = post;\n\n  const [comments, setComents] = useState([]);\n\n  const [idCommentRemove, setIdCommentRemove] = useState(null);\n  const [newComment, setNewComment] = useState(null);\n\n  const [commentsVisibility, setCommentsVisibility] = useState(false);\n\n  useEffect(() => {\n    if (!idCommentRemove) {\n      getPostComments(postId).then(setComents);\n\n      return;\n    }\n\n    removeComment(idCommentRemove);\n    getPostComments(postId).then(setComents);\n    setIdCommentRemove(null);\n  }, [idCommentRemove]);\n\n  useEffect(() => {\n    addNewComment(newComment);\n    getPostComments(postId).then(setComents);\n\n    setNewComment(null);\n  }, [newComment]);\n\n  return (\n    <>\n      <div className=\"popup__content\">\n        <button\n          className=\"button button__close\"\n          type=\"button\"\n          onClick={() => callBack({})}\n        >\n          X\n        </button>\n        <div className=\"popup__header\">\n          <img src={postImage} alt=\"post-logo\" />\n        </div>\n\n        <div className=\"popup__info-block person\">\n\n          <img\n            src={authorImage}\n            alt=\"person-avatar\"\n            className=\"person__image\"\n          />\n\n          <div className=\"person__about\">\n            <span className=\"person__name\">\n              {name}\n            </span>\n            <span>\n              {`${street} ${suite}`}\n              <br />\n              {`${city} ${zipcode}`}\n            </span>\n            <span>\n              {phone}\n            </span>\n            <span>\n              {email}\n            </span>\n\n          </div>\n        </div>\n\n        <div className=\"person__post\">\n          <span className=\"person__post__title\">\n            {title}\n          </span>\n          <div className=\"person__post__text\">\n            &ldquo;\n            {' '}\n            {body}\n            {' '}\n            &bdquo;\n          </div>\n\n          {commentsVisibility\n            && (\n              <Comments\n                comments={comments}\n                callBack={setIdCommentRemove}\n              />\n            )\n          }\n\n          <div className=\"feedback\">\n            <NewCommentForm\n              postId={postId}\n              callBack={setNewComment}\n            />\n\n            <button\n              type=\"button\"\n              className=\"button button__toggle\"\n              disabled={!comments.length}\n              onClick={() => {\n                setCommentsVisibility(!commentsVisibility);\n              }}\n            >\n              {\n                setButtonTitle(comments.length, commentsVisibility)\n              }\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nPopup.propTypes = {\n  post: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      body: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  postAuthor: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    address: PropTypes.shape({\n      city: PropTypes.string.isRequired,\n      street: PropTypes.string.isRequired,\n      suite: PropTypes.string.isRequired,\n      zipcode: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  callBack: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { getPosts } from './api/posts';\nimport postsImages from './posts_images.json';\nimport usersImage from './usersImages.json';\nimport usersFromApi from './api/users.json';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { PostsList } from './components/PostsList';\nimport { Paginator } from './components/Paginator';\nimport { Popup } from './components/Popup';\n\nconst App = () => {\n  const [state, setState] = useState({\n    users: [],\n    posts: [],\n    total: 0,\n    perPage: 6,\n    currentPage: 1,\n    currentUser: null,\n    isActive: true,\n  });\n\n  const [postsForDisplay, setPostsForDisplay] = useState([]);\n  const [postDetails, setPostDetails] = useState({});\n\n  const { users, posts, currentPage, perPage, currentUser, isActive } = state;\n\n  const handleSetState = (name, value) => {\n    if (name === 'currentUser') {\n      setState(prevState => ({\n        ...prevState, currentPage: 1, isActive: false,\n      }));\n    }\n\n    if (name === 'isActive') {\n      setState(prevState => ({\n        ...prevState,\n        currentPage: 1,\n      }));\n    }\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: Number.isInteger(value) ? +value : value,\n    }));\n  };\n\n  useEffect(() => {\n    const usersList = usersFromApi.map((user) => {\n      const image = usersImage.find(obj => obj[user.id])[user.id];\n\n      return {\n        ...user, image,\n      };\n    });\n\n    getPosts()\n      .then(postsList => setState(prevState => ({\n        ...prevState, users: usersList, posts: postsList, total: posts.length,\n      })));\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      setPostsForDisplay(posts);\n\n      return;\n    }\n\n    setPostsForDisplay(posts.filter(post => post.userId === currentUser.id));\n  }, [posts, isActive, currentUser]);\n\n  const startIndex = currentPage * perPage - perPage;\n  const stopIndex = currentPage * perPage;\n\n  return (!!postsForDisplay.length\n    && (\n    <div className=\"App\">\n      <header className=\"App__header\" />\n\n      <main className=\"App__main\">\n        <Carousel\n          users={users}\n          callBack={handleSetState}\n        />\n\n        {\n          postsForDisplay.length\n          && (\n          <>\n            <div className=\"posts-container\">\n              <div className=\"buttons-container\">\n                <button\n                  type=\"button\"\n                  className={classNames(\n                    'button-posts',\n                    { 'button-posts__active': isActive },\n                  )}\n                  disabled={isActive}\n                  onClick={() => {\n                    handleSetState('isActive', true);\n                  }}\n                >\n                  ALL POSTS\n                </button>\n                {currentUser\n                  && (\n                  <button\n                    type=\"button\"\n                    className={classNames(\n                      'button-posts',\n                      'button-posts__user',\n                      { 'button-posts__active': !isActive },\n                    )}\n                    disabled={!isActive}\n                    onClick={() => {\n                      handleSetState('isActive', false);\n                    }}\n                  >\n                    {`Posts of: ${currentUser.name}`}\n                  </button>\n                  )\n                }\n              </div>\n\n              <PostsList\n                startIndex={startIndex}\n                stopIndex={stopIndex}\n                images={postsImages}\n                users={users}\n                posts={postsForDisplay.slice(startIndex, stopIndex)}\n                callBack={setPostDetails}\n              />\n            </div>\n            {\n              !!Object.keys(postDetails).length\n              && (\n              <div\n                role=\"link\"\n                styling=\"link\"\n                aria-hidden\n                className=\"popup\"\n                onClick={(event) => {\n                  if (event.target === event.currentTarget) {\n                    setPostDetails({});\n                  }\n                }}\n              >\n                <Popup\n                  {...postDetails}\n                  callBack={setPostDetails}\n                />\n              </div>\n              )\n            }\n\n            <Paginator\n              total={postsForDisplay.length}\n              perPage={6}\n              currentPage={currentPage}\n              handleChange={handleSetState}\n            />\n          </>\n          )\n        }\n\n      </main>\n    </div>\n    )\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}